<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jason Blog</title><link>/</link><description></description><atom:link href="/feeds/jason.rss.xml" rel="self"></atom:link><lastBuildDate>Fri, 22 Aug 2014 16:08:00 +0200</lastBuildDate><item><title>你好，世界！</title><link>/ni-hao-shi-jie.html</link><description>&lt;p&gt;你好，世界，世界，你好。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#coding:utf-8&lt;/span&gt;

&lt;span class="s-Atom"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

&lt;span class="s-Atom"&gt;Created on Oct 28, 2012&lt;/span&gt;

&lt;span class="s-Atom"&gt;@author: http://www.yihaomen.com&lt;/span&gt;

&lt;span class="s-Atom"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

&lt;span class="s-Atom"&gt;import&lt;/span&gt; &lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;os&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;time&lt;/span&gt;  

&lt;span class="s-Atom"&gt;import&lt;/span&gt; &lt;span class="s-Atom"&gt;hashlib&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;platform&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;stat&lt;/span&gt;  



&lt;span class="s-Atom"&gt;listen_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;192.168.4.128&amp;quot;&lt;/span&gt;  

&lt;span class="s-Atom"&gt;listen_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2111&lt;/span&gt;  

&lt;span class="s-Atom"&gt;conn_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;  

&lt;span class="s-Atom"&gt;root_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/home/summer/ftp&amp;quot;&lt;/span&gt;  

&lt;span class="s-Atom"&gt;max_connections&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;  

&lt;span class="s-Atom"&gt;conn_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;120&lt;/span&gt;  



&lt;span class="s-Atom"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;FtpConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

        &lt;span class="s-Atom"&gt;def&lt;/span&gt; &lt;span class="k"&gt;__&lt;/span&gt;&lt;span class="nf"&gt;init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;__&lt;/span&gt;&lt;span class="nf"&gt;init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;fd&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;running&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;True&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setDaemon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;alive_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;option_utf8&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;False&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;identified&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;False&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;option_pasv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;True&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;  

        &lt;span class="s-Atom"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;option_utf8:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;utf8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getfilesystemencoding&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;&amp;lt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;fd&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;#&lt;/span&gt; &lt;span class="nv"&gt;Ftp&lt;/span&gt; &lt;span class="nv"&gt;Command&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;BYE&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;or&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;QUIT&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;root_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/xxftp.goodbye&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;221&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;root_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/xxftp.goodbye&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;  

                &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;221&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Bye!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;running&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;False&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;return&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;USER&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;#&lt;/span&gt; &lt;span class="nv"&gt;Set&lt;/span&gt; &lt;span class="nv"&gt;Anonymous&lt;/span&gt; &lt;span class="nv"&gt;User&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;anonymous&amp;quot;&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;for&lt;/span&gt; &lt;span class="s-Atom"&gt;c&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="nn"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="o"&gt;not&lt;/span&gt; &lt;span class="s-Atom"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;isalpha&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="s-Atom"&gt;and&lt;/span&gt; &lt;span class="o"&gt;not&lt;/span&gt; &lt;span class="s-Atom"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="s-Atom"&gt;and&lt;/span&gt; &lt;span class="s-Atom"&gt;c&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="s-Atom"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;530&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Incorrect username.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;return&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;home_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;root_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;username&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;curr_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;curr_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;full_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;permission&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;vdir_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;limit_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;is_virtual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="o"&gt;not&lt;/span&gt; &lt;span class="s-Atom"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;home_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;530&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;User &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;username&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; not exists.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;return&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;pass_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;home_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/.xxftp/password&amp;quot;&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;pass_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;331&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Password required for &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;230&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Identified!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;identified&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;True&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;return&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PASS&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="nf"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;pass_path&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;\r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s-Atom"&gt;hashlib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;230&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Identified!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;identified&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;True&lt;/span&gt;  

                &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;530&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Not identified!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;identified&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;False&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;return&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;not&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;identified&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;530&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Please login with USER and PASS.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;return&lt;/span&gt;  



            &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;alive_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;True&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NOOP&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;TYPE&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SYST&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;UNIX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;EPSV&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;or&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PASV&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;option_pasv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;True&lt;/span&gt;  

                &lt;span class="nn"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;data_fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;data_fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s-Atom"&gt;listen_ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;data_fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;data_fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getsockname&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;EPSV&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;229&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Entering Extended Passive Mode (|||&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;|)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;ipnum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inet_aton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;227&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Entering Passive Mode (%s,%u,%u).&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;%  &lt;/span&gt;

                            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;ip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;port&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="s-Atom"&gt;xff&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;port&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="s-Atom"&gt;xff&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;  

                &lt;span class="nn"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;failed to create data socket.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;EPRT&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;implement EPRT later...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PORT&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;option_pasv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;False&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;data_fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;data_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;data_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nf"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PWD&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;or&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;XPWD&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;curr_dir&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;curr_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;257&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;&amp;quot;&amp;#39;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;curr_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;LIST&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;or&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NLST&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt; &lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;and&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;#&lt;/span&gt; &lt;span class="s-Atom"&gt;omit&lt;/span&gt; &lt;span class="s-Atom"&gt;parameters&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;remote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;local&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;perm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;vdir_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;limit_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;is_virtual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="o"&gt;not&lt;/span&gt; &lt;span class="s-Atom"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;local&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;550&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;failed.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;return&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="o"&gt;not&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;establish&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;return&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;for&lt;/span&gt; &lt;span class="s-Atom"&gt;v&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="s-Atom"&gt;vdir_list:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;option_utf8:&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getfilesystemencoding&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nf"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NLST&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;f&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;  

                    &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;d%s%s------- %04u %8s %8s %8lu %s %s\r\n&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;% (  &lt;/span&gt;

                            &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;read&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="s-Atom"&gt;perm&lt;/span&gt; &lt;span class="s-Atom"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  

                            &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;write&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="s-Atom"&gt;perm&lt;/span&gt; &lt;span class="s-Atom"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  

                            &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  

                            &lt;span class="s-Atom"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%b %d  %Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;time&lt;/span&gt;&lt;span class="p"&gt;())),&lt;/span&gt;  

                            &lt;span class="s-Atom"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;data_fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;for&lt;/span&gt; &lt;span class="s-Atom"&gt;f&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="s-Atom"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;local&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;f&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;continue&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;local&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s-Atom"&gt;f&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;option_utf8:&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getfilesystemencoding&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nf"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NLST&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;f&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;  

                    &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;st&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;stat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%s%s%s------- %04u %8s %8s %8lu %s %s\r\n&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;% (  &lt;/span&gt;

                            &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s-Atom"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  

                            &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;read&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="s-Atom"&gt;perm&lt;/span&gt; &lt;span class="s-Atom"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  

                            &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;write&amp;quot;&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="s-Atom"&gt;perm&lt;/span&gt; &lt;span class="s-Atom"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  

                            &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s-Atom"&gt;stat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;ST_SIZE&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  

                            &lt;span class="s-Atom"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%b %d  %Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s-Atom"&gt;stat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;ST_MTIME&lt;/span&gt;&lt;span class="p"&gt;])),&lt;/span&gt;  

                            &lt;span class="s-Atom"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;data_fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;226&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Limit size: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;limit_size&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;data_fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;data_fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;REST&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;file_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;FEAT&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;211-Features:\r\nSITES\r\nEPRT\r\nEPSV\r\nMDTM\r\nPASV\r\nREST STREAM\r\nSIZE\r\nUTF8\r\n211 End\r\n&amp;quot;&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;features&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;OPTS&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;UTF8 ON&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;option_utf8&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;True&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;UTF8 OFF&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;option_utf8&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;False&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;unrecognized option&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;elif&lt;/span&gt; &lt;span class="s-Atom"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;CDUP&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;False&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;..&amp;quot;&lt;/span&gt;  

            &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;False&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="nn"&gt;finish&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s-Atom"&gt;return&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;#&lt;/span&gt; &lt;span class="nv"&gt;Parse&lt;/span&gt; &lt;span class="nf"&gt;argument&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;It&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;s a path )  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            if arg == &amp;quot;&amp;quot;:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                self.message(500, &amp;quot;where&amp;#39;s&lt;/span&gt; &lt;span class="s-Atom"&gt;my&lt;/span&gt; &lt;span class="s-Atom"&gt;argument?&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;)  &lt;/span&gt;

&lt;span class="s2"&gt;                return  &lt;/span&gt;

&lt;span class="s2"&gt;            remote, local, permission, vdir_list, limit_size, is_virtual = self.parse_path(arg)  &lt;/span&gt;

&lt;span class="s2"&gt;            # can not do anything to virtual directory  &lt;/span&gt;

&lt;span class="s2"&gt;            if is_virtual: permission = &amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;none&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;  &lt;/span&gt;

&lt;span class="s2"&gt;            can_read, can_write, can_modify = &amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;read&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; in permission, &amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;write&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; in permission, &amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;modify&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; in permission  &lt;/span&gt;

&lt;span class="s2"&gt;            newpath = local  &lt;/span&gt;

&lt;span class="s2"&gt;            try:  &lt;/span&gt;

&lt;span class="s2"&gt;                if cmd == &amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;CWD&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:  &lt;/span&gt;

&lt;span class="s2"&gt;                    if(os.path.isdir(newpath)):  &lt;/span&gt;

&lt;span class="s2"&gt;                        self.curr_dir = remote  &lt;/span&gt;

&lt;span class="s2"&gt;                        self.full_path = newpath  &lt;/span&gt;

&lt;span class="s2"&gt;                        self.message(250, &amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39; + remote + &amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    else:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(550, &amp;quot;failed&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                elif cmd == &amp;quot;MDTM&amp;quot;:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if os.path.exists(newpath):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(213, time.strftime(&amp;quot;%Y%m%d%I%M%S&amp;quot;, time.localtime(  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                            os.path.getmtime(newpath))))  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    else:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(550, &amp;quot;failed&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                elif cmd == &amp;quot;SIZE&amp;quot;:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(231, os.path.getsize(newpath))  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                elif cmd == &amp;quot;XMKD&amp;quot; or cmd == &amp;quot;MKD&amp;quot;:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if not can_modify:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(550, &amp;quot;permission denied.&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        return  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    os.mkdir(newpath)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(250, &amp;quot;ok&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                elif cmd == &amp;quot;RNFR&amp;quot;:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if not can_modify:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(550, &amp;quot;permission denied.&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        return  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.temp_path = newpath  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(350, &amp;quot;rename from &amp;quot; + remote)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                elif cmd == &amp;quot;RNTO&amp;quot;:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    os.rename(self.temp_path, newpath)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(250, &amp;quot;RNTO to &amp;quot; + remote)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                elif cmd == &amp;quot;XRMD&amp;quot; or cmd == &amp;quot;RMD&amp;quot;:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if not can_modify:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(550, &amp;quot;permission denied.&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        return  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    os.rmdir(newpath)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(250, &amp;quot;ok&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                elif cmd == &amp;quot;DELE&amp;quot;:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if not can_modify:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(550, &amp;quot;permission denied.&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        return  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    os.remove(newpath)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(250, &amp;quot;ok&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                elif cmd == &amp;quot;RETR&amp;quot;:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if not os.path.isfile(newpath):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(550, &amp;quot;failed&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        return  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if not can_read:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(550, &amp;quot;permission denied.&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        return  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if not self.establish(): return  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(150, &amp;quot;ok&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    f = open(newpath, &amp;quot;rb&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    while self.running:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.alive_time = time.time()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        data = f.read(8192)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        if len(data) == 0: break  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.data_fd.send(data)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    f.close()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.data_fd.close()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.data_fd = 0  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(226, &amp;quot;ok&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                elif cmd == &amp;quot;STOR&amp;quot; or cmd == &amp;quot;APPE&amp;quot;:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if not can_write:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(550, &amp;quot;permission denied.&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        return  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if os.path.exists(newpath) and not can_modify:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(550, &amp;quot;permission denied.&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        return  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    # Check space size remained!  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    used_size = 0  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if limit_size &amp;gt; 0:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        used_size = self.get_dir_size(os.path.dirname(newpath))  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if not self.establish(): return  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(150, &amp;quot;ok&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    f = open(newpath, (&amp;quot;ab&amp;quot; if cmd == &amp;quot;APPE&amp;quot; else &amp;quot;wb&amp;quot;) )  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    while self.running:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.alive_time = time.time()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        data = self.data_fd.recv(8192)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        if len(data) == 0: break  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        if limit_size &amp;gt; 0:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                            used_size = used_size + len(data)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                            if used_size &amp;gt; limit_size: break  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        f.write(data)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    f.close()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.data_fd.close()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.data_fd = 0  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if limit_size &amp;gt; 0 and used_size &amp;gt; limit_size:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(550, &amp;quot;Exceeding user space limit: &amp;quot; + str(limit_size) + &amp;quot; bytes&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    else:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.message(226, &amp;quot;ok&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                else:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(500, cmd + &amp;quot; not implemented&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            except:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                self.message(550, &amp;quot;failed.&amp;quot;)  &lt;/span&gt;



&lt;span class="s-Atom"&gt;        def establish(self):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            if self.data_fd == 0:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                self.message(500, &amp;quot;no data connection&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                return False  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            if self.option_pasv:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                fd = self.data_fd.accept()[0]  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                self.data_fd.close()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                self.data_fd = fd  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            else:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                try:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.data_fd.connect((self.data_ip, self.data_port))  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                except:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(500, &amp;quot;failed to establish data connection&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    return False  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            return True  &lt;/span&gt;



&lt;span class="s-Atom"&gt;        def read_virtual(self, path):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            vdir_list = []  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            path = path + &amp;quot;/.xxftp/virtual&amp;quot;  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            if os.path.isfile(path):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                for v in open(path, &amp;quot;r&amp;quot;).readlines():  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    items = v.split()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    items[1] = items[1].replace(&amp;quot;$root&amp;quot;, root_dir)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    vdir_list.append(items)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            return vdir_list  &lt;/span&gt;



&lt;span class="s-Atom"&gt;        def get_dir_size(self, folder):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            size = 0  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            for path, dirs, files in os.walk(folder):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                for f in files:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    size += os.path.getsize(os.path.join(path, f))  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            return size  &lt;/span&gt;



&lt;span class="s-Atom"&gt;        def read_size(self, path):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            size = 0  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            path = path + &amp;quot;/.xxftp/size&amp;quot;  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            if os.path.isfile(path):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                size = int(open(path, &amp;quot;r&amp;quot;).readline())  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            return size  &lt;/span&gt;



&lt;span class="s-Atom"&gt;        def read_permission(self, path):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            permission = &amp;quot;read,write,modify&amp;quot;  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            path = path + &amp;quot;/.xxftp/permission&amp;quot;  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            if os.path.isfile(path):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                permission = open(path, &amp;quot;r&amp;quot;).readline()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            return permission  &lt;/span&gt;



&lt;span class="s-Atom"&gt;        def parse_path(self, path):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            if path == &amp;quot;&amp;quot;: path = &amp;quot;.&amp;quot;  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            if path[0] != &amp;quot;/&amp;quot;:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                path = self.curr_dir + &amp;quot;/&amp;quot; + path  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            s = os.path.normpath(path).replace(&amp;quot;\\&amp;quot;, &amp;quot;/&amp;quot;).split(&amp;quot;/&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            local = self.home_dir  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            # reset directory permission  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            vdir_list = self.read_virtual(local)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            limit_size = self.read_size(local)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            permission = self.read_permission(local)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            remote = &amp;quot;&amp;quot;  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            is_virtual = False  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            for name in s:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                name = name.lstrip(&amp;quot;.&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                if name == &amp;quot;&amp;quot;: continue  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                remote = remote + &amp;quot;/&amp;quot; + name  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                is_virtual = False  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                for v in vdir_list:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if v[0] == name:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        permission = v[2]  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        local = v[1]  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        limit_size = self.read_size(local)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        is_virtual = True  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                if not is_virtual: local = local + &amp;quot;/&amp;quot; + name  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                vdir_list = self.read_virtual(local)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            return (remote, local, permission, vdir_list, limit_size, is_virtual)  &lt;/span&gt;



&lt;span class="s-Atom"&gt;        def run(self):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            &amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;Connection&lt;/span&gt; &lt;span class="nv"&gt;Process&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;&amp;#39;&amp;#39;  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            try:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                if len(conn_list) &amp;gt; max_connections:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(500, &amp;quot;too many connections!&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.fd.close()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.running = False  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    return  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                # Welcome Message  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                if os.path.exists(root_dir + &amp;quot;/xxftp.welcome&amp;quot;):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(220, open(root_dir + &amp;quot;/xxftp.welcome&amp;quot;).read())  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                else:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    self.message(220, &amp;quot;xxftp(Python) www.yihaomen.com&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                # Command Loop  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                line = &amp;quot;&amp;quot;  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                while self.running:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    data = self.fd.recv(4096)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if len(data) == 0: break  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    line += data  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if line[-2:] != &amp;quot;\r\n&amp;quot;: continue  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    line = line[:-2]  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    space = line.find(&amp;quot; &amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    if space == -1:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.process(line, &amp;quot;&amp;quot;)  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    else:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                        self.process(line[:space], line[space+1:])  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                    line = &amp;quot;&amp;quot;  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            except:  &lt;/span&gt;

&lt;span class="s-Atom"&gt;                print &amp;quot;error&amp;quot;, sys.exc_info()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            self.running = False  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            self.fd.close()  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            print &amp;quot;connection end&amp;quot;, self.fd, &amp;quot;user&amp;quot;, self.username  &lt;/span&gt;



&lt;span class="s-Atom"&gt;        def message(self, code, s):  &lt;/span&gt;

&lt;span class="s-Atom"&gt;            &amp;#39;&amp;#39;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;Send&lt;/span&gt; &lt;span class="nv"&gt;Ftp&lt;/span&gt; &lt;span class="nv"&gt;Message&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;s&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;ss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;ss&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;ss&lt;/span&gt;&lt;span class="p"&gt;[:-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;r&lt;/span&gt; &lt;span class="s-Atom"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s-Atom"&gt;ss&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;  

            &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s-Atom"&gt;ss&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;option_utf8:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getfilesystemencoding&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nf"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  



&lt;span class="s-Atom"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;server_listen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

        &lt;span class="s-Atom"&gt;global&lt;/span&gt; &lt;span class="s-Atom"&gt;conn_list&lt;/span&gt;  

        &lt;span class="s-Atom"&gt;listen_fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

        &lt;span class="s-Atom"&gt;listen_fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setsockopt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;SOL_SOCKET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;SO_REUSEADDR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

        &lt;span class="s-Atom"&gt;listen_fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s-Atom"&gt;listen_ip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;listen_port&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  

        &lt;span class="s-Atom"&gt;listen_fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

        &lt;span class="s-Atom"&gt;conn_lock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;Lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

        &lt;span class="s-Atom"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ftpd is listening on &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;listen_ip&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;listen_port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  



        &lt;span class="s-Atom"&gt;while&lt;/span&gt; &lt;span class="nv"&gt;True&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;conn_fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;remote_addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;listen_fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;connection from &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;remote_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;conn_list&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;conn_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;FtpConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;conn_fd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  



            &lt;span class="s-Atom"&gt;conn_lock&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;acquire&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;conn_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;#&lt;/span&gt; &lt;span class="s-Atom"&gt;check&lt;/span&gt; &lt;span class="s-Atom"&gt;timeout&lt;/span&gt;  

            &lt;span class="nn"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;curr_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;for&lt;/span&gt; &lt;span class="s-Atom"&gt;conn&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="s-Atom"&gt;conn_list:&lt;/span&gt;  

                    &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="nf"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;curr_time&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s-Atom"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;alive_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s-Atom"&gt;conn_timeout:&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;running&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;True&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

                            &lt;span class="s-Atom"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;shutdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;SHUT_RDWR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

                        &lt;span class="s-Atom"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;running&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;False&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;conn_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s-Atom"&gt;conn&lt;/span&gt; &lt;span class="s-Atom"&gt;for&lt;/span&gt; &lt;span class="s-Atom"&gt;conn&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="s-Atom"&gt;conn_list&lt;/span&gt; &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;conn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;running&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  

            &lt;span class="nn"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  

                &lt;span class="s-Atom"&gt;print&lt;/span&gt; &lt;span class="s-Atom"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;exc_info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

            &lt;span class="s-Atom"&gt;conn_lock&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;release&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  



&lt;span class="s-Atom"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

    &lt;span class="nf"&gt;server_listen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  



&lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="k"&gt;__&lt;/span&gt;&lt;span class="s-Atom"&gt;name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;  

    &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jason</dc:creator><pubDate>Fri, 22 Aug 2014 16:08:00 +0200</pubDate><guid>tag:,2014-08-22:ni-hao-shi-jie.html</guid><category>python</category></item></channel></rss>